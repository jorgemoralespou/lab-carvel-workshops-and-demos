#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("@ytt:struct", "struct")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:assert", "assert")

#@ def secret_data():
#@   if type(data.values.options.data) == "string":
#@     output = yaml.decode(data.values.options.data)
#@   else:
#@     output = struct.decode(data.values.options.data)
#@   end
#@   if type(output) != "dict":
#@     print(type(output))
#@     assert.fail("data must be a dictionary")
#@   end
#@   for key in output:
#@     if type(output[key]) != "string":
#@       assert.fail("value for key {} in data is not a string".format(key))
#@     end
#@   end
#@   return output
#@ end

#@ def encoded_secret_data():
#@   output = {}
#@   input = secret_data()
#@   for key in input:
#@     output[key] = base64.encode(input[key])
#@   end
#@   return output
#@ end

---
apiVersion: v1
kind: Secret
metadata:
  name: #@ data.values.resource.name
type: #@ data.values.options.type or "Opaque"
#@ if data.values.options.data:
#@ if data.values.options.encode == "false":
stringData: #@ secret_data()
#@ else:
data: #@ encoded_secret_data()
#@ end
#@ end
